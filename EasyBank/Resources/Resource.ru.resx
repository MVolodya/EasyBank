<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountNumberRequired" xml:space="preserve">
    <value>Требуется номер счета</value>
  </data>
  <data name="AccountStatusRequired" xml:space="preserve">
    <value>Требуется статус счета</value>
  </data>
  <data name="AccountTypeRequired" xml:space="preserve">
    <value>Требуется тип счета</value>
  </data>
  <data name="AmountRequired" xml:space="preserve">
    <value>Требуется сумма</value>
  </data>
  <data name="BirthDateRequired" xml:space="preserve">
    <value>Требуется дата рождения</value>
  </data>
  <data name="ChooseLang" xml:space="preserve">
    <value>Выберите язык</value>
  </data>
  <data name="ClientIdRequired" xml:space="preserve">
    <value>Требуется клиент</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Страна</value>
  </data>
  <data name="CurrencyIdRequired" xml:space="preserve">
    <value>Требуется валюта</value>
  </data>
  <data name="CurrencyNameRequired" xml:space="preserve">
    <value>Требуется название валюты</value>
  </data>
  <data name="DateNotValid" xml:space="preserve">
    <value>Ошибочный ввод даты</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>Требуется электронный адрес </value>
  </data>
  <data name="ExpirationDateRequired" xml:space="preserve">
    <value>Требуется срок действия</value>
  </data>
  <data name="Len8" xml:space="preserve">
    <value>Длинна должна быть 8 симоволов</value>
  </data>
  <data name="NameFromCap" xml:space="preserve">
    <value>Должно начинаться с большой буквы и состоять только из латинских букв</value>
  </data>
  <data name="NameLen3To20" xml:space="preserve">
    <value>В этом поле должно быть от 3 до 20 символов</value>
  </data>
  <data name="NameRequired" xml:space="preserve">
    <value>Требуется имя</value>
  </data>
  <data name="PIdNumberRequired" xml:space="preserve">
    <value>Требуется идентификационный код</value>
  </data>
  <data name="StatusIdRequired" xml:space="preserve">
    <value>Требуется статус</value>
  </data>
  <data name="SurnameRequired" xml:space="preserve">
    <value>Требуется фамилия</value>
  </data>
  <data name="SurnLen3To30" xml:space="preserve">
    <value>В этом поле должно быть от 3 до 20 символов</value>
  </data>
  <data name="Template" xml:space="preserve">
    <value>Шаблон</value>
  </data>
  <data name="TypeIdRequired" xml:space="preserve">
    <value>Требуется тип</value>
  </data>
  <data name="OnlyDigits" xml:space="preserve">
    <value>Только цифры</value>
  </data>
  <data name="AccNumb" xml:space="preserve">
    <value>Номер счета</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Сумма</value>
  </data>
  <data name="BackToList" xml:space="preserve">
    <value>Вернуться к списку</value>
  </data>
  <data name="BirthDate" xml:space="preserve">
    <value>Дата рождения</value>
  </data>
  <data name="Client" xml:space="preserve">
    <value>Клиент</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>Валюта</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="ExpDate" xml:space="preserve">
    <value>Дата окончания действия</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Имя</value>
  </data>
  <data name="PIdNum" xml:space="preserve">
    <value>Идентификационный код</value>
  </data>
  <data name="RegDate" xml:space="preserve">
    <value>Дата регистрации</value>
  </data>
  <data name="Surname" xml:space="preserve">
    <value>Фамилия</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Тип</value>
  </data>
  <data name="AccountsTitle" xml:space="preserve">
    <value>Счета</value>
  </data>
  <data name="AddAccount" xml:space="preserve">
    <value>Создать счет</value>
  </data>
  <data name="AddClient" xml:space="preserve">
    <value>Добавить клиента</value>
  </data>
  <data name="AddMoney" xml:space="preserve">
    <value>Добавить деньги</value>
  </data>
  <data name="AddPhoto" xml:space="preserve">
    <value>Добавить фото</value>
  </data>
  <data name="AdviceMessageInClientListSearch" xml:space="preserve">
    <value>Убедитесь, что Вы ввели корректную информацию в поиске</value>
  </data>
  <data name="ClientListSearchTypeRequirement" xml:space="preserve">
    <value>Введите фамилию или идентификационный код клиента</value>
  </data>
  <data name="ClientNotFound" xml:space="preserve">
    <value>Клиент не найден</value>
  </data>
  <data name="ClientsListTitle" xml:space="preserve">
    <value>Список клиентов</value>
  </data>
  <data name="ClientsProfileTitle" xml:space="preserve">
    <value>Профиль клиента</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Удалить</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Подробности</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Редактировать</value>
  </data>
  <data name="Passport" xml:space="preserve">
    <value>Паспорт</value>
  </data>
  <data name="TransMoney" xml:space="preserve">
    <value>Перевести деньги</value>
  </data>
  <data name="Of" xml:space="preserve">
    <value>из</value>
  </data>
  <data name="Page" xml:space="preserve">
    <value>Страница</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Поиск</value>
  </data>
  <data name="AccountsAreAbsent" xml:space="preserve">
    <value>Счета отсутствуют</value>
  </data>
  <data name="ChooseFile" xml:space="preserve">
    <value>Выбрать файл</value>
  </data>
  <data name="ClientsList" xml:space="preserve">
    <value>Список клиентов</value>
  </data>
  <data name="ClientsPhotoTitle" xml:space="preserve">
    <value>Фотография клиента</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Создать</value>
  </data>
  <data name="FileUpload" xml:space="preserve">
    <value>Загрузить файл</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Главная страница</value>
  </data>
  <data name="NoPhoto" xml:space="preserve">
    <value>Нет фотографии</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Статус</value>
  </data>
  <data name="UploadClientPhotoTitle" xml:space="preserve">
    <value>Загрузить фотографию клиента</value>
  </data>
  <data name="UploadImage" xml:space="preserve">
    <value>Загрузка фотографии</value>
  </data>
  <data name="UploadPassportScan" xml:space="preserve">
    <value>Загрузить паспорт</value>
  </data>
</root>