<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountNumberRequired" xml:space="preserve">
    <value>Account number required</value>
  </data>
  <data name="AccountStatusRequired" xml:space="preserve">
    <value>Account status required</value>
  </data>
  <data name="AccountTypeRequired" xml:space="preserve">
    <value>Account type required</value>
  </data>
  <data name="AmountRequired" xml:space="preserve">
    <value>Amount required</value>
  </data>
  <data name="BirthDateRequired" xml:space="preserve">
    <value>PId number required</value>
  </data>
  <data name="ChooseLang" xml:space="preserve">
    <value>Choose Language</value>
  </data>
  <data name="ClientIdRequired" xml:space="preserve">
    <value>Client required</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="CurrencyIdRequired" xml:space="preserve">
    <value>Currency required</value>
  </data>
  <data name="CurrencyNameRequired" xml:space="preserve">
    <value>Currency name required</value>
  </data>
  <data name="DateNotValid" xml:space="preserve">
    <value>Date is not Valid</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>Email required</value>
  </data>
  <data name="ExpirationDateRequired" xml:space="preserve">
    <value>Expiration date required</value>
  </data>
  <data name="Len8" xml:space="preserve">
    <value>Length must be 8 chars</value>
  </data>
  <data name="NameFromCap" xml:space="preserve">
    <value>Must start with capital letter and have latin characters only</value>
  </data>
  <data name="NameLen3To20" xml:space="preserve">
    <value>Name must have length from 3 to 20 characters</value>
  </data>
  <data name="NameRequired" xml:space="preserve">
    <value>First name required</value>
  </data>
  <data name="OnlyDigits" xml:space="preserve">
    <value>Only digits are allowed</value>
  </data>
  <data name="PIdNumberRequired" xml:space="preserve">
    <value>PId number required</value>
  </data>
  <data name="StatusIdRequired" xml:space="preserve">
    <value>Status required</value>
  </data>
  <data name="SurnameRequired" xml:space="preserve">
    <value>Surname required</value>
  </data>
  <data name="SurnLen3To30" xml:space="preserve">
    <value>Surname must have length from 3 to 30 characters</value>
  </data>
  <data name="Template" xml:space="preserve">
    <value>Template</value>
  </data>
  <data name="TypeIdRequired" xml:space="preserve">
    <value>Type required</value>
  </data>
  <data name="AccNumb" xml:space="preserve">
    <value>Account Number</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="BackToList" xml:space="preserve">
    <value>Back to list</value>
  </data>
  <data name="BirthDate" xml:space="preserve">
    <value>Birth Date</value>
  </data>
  <data name="Client" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="ExpDate" xml:space="preserve">
    <value>Expiration Date</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="PIdNum" xml:space="preserve">
    <value>PId Number</value>
  </data>
  <data name="RegDate" xml:space="preserve">
    <value>Registration Date</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Surname" xml:space="preserve">
    <value>Surname</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="AccountsTitle" xml:space="preserve">
    <value>Accounts</value>
  </data>
  <data name="AddAccount" xml:space="preserve">
    <value>Add new account</value>
  </data>
  <data name="AddClient" xml:space="preserve">
    <value>Add new client</value>
  </data>
  <data name="AddMoney" xml:space="preserve">
    <value>Add money</value>
  </data>
  <data name="AddPhoto" xml:space="preserve">
    <value>Add photo</value>
  </data>
  <data name="AdviceMessageInClientListSearch" xml:space="preserve">
    <value>Make sure you've entered correct information and try again!</value>
  </data>
  <data name="ClientListSearchTypeRequirement" xml:space="preserve">
    <value>Enter surname or identification number</value>
  </data>
  <data name="ClientNotFound" xml:space="preserve">
    <value>Client not found</value>
  </data>
  <data name="ClientsListTitle" xml:space="preserve">
    <value>Client list</value>
  </data>
  <data name="ClientsProfileTitle" xml:space="preserve">
    <value>Clients profile</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Passport" xml:space="preserve">
    <value>Passport</value>
  </data>
  <data name="TransMoney" xml:space="preserve">
    <value>Transfer money</value>
  </data>
  <data name="BackToProfile" xml:space="preserve">
    <value>Back to profile</value>
  </data>
  <data name="Of" xml:space="preserve">
    <value>of</value>
  </data>
  <data name="Page" xml:space="preserve">
    <value>Page</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="AccountsAreAbsent" xml:space="preserve">
    <value>Accounts are absent</value>
  </data>
  <data name="ChooseFile" xml:space="preserve">
    <value>Choose file</value>
  </data>
  <data name="ClientsList" xml:space="preserve">
    <value>Clients list</value>
  </data>
  <data name="ClientsPhotoTitle" xml:space="preserve">
    <value>Clients photo</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="FileUpload" xml:space="preserve">
    <value>Upload file</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="NoPhoto" xml:space="preserve">
    <value>Client has no photo</value>
  </data>
  <data name="UploadClientPhotoTitle" xml:space="preserve">
    <value>Upload client photo</value>
  </data>
  <data name="UploadImage" xml:space="preserve">
    <value>Upload image</value>
  </data>
  <data name="UploadPassportScan" xml:space="preserve">
    <value>Upload passport scan</value>
  </data>
  <data name="AskToDeleteCurrency" xml:space="preserve">
    <value>Are you sure you want to delete this?</value>
  </data>
  <data name="Currencies" xml:space="preserve">
    <value>Currencies</value>
  </data>
  <data name="CurrencyList" xml:space="preserve">
    <value>Currencies list</value>
  </data>
  <data name="AddCurrency" xml:space="preserve">
    <value>Add currency</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="WelcomeMessage" xml:space="preserve">
    <value>Welcome to Easy Bank!</value>
  </data>
  <data name="EmailInvalid" xml:space="preserve">
    <value>Invalid email</value>
  </data>
  <data name="Len10" xml:space="preserve">
    <value>This field must be 10 characters long</value>
  </data>
  <data name="WrongFileChoose" xml:space="preserve">
    <value>Wrong input type. Image is expected.</value>
  </data>
  <data name="AvailableAmount" xml:space="preserve">
    <value>Available amount</value>
  </data>
  <data name="IsOnlineUser" xml:space="preserve">
    <value>Is online system user</value>
  </data>
  <data name="WrongLogInForAdminAndOperPage" xml:space="preserve">
    <value>Only for admins and operators</value>
  </data>
  <data name="WrongLogInForClientPage" xml:space="preserve">
    <value>Only for clients</value>
  </data>
  <data name="WidthdrawMoney" xml:space="preserve">
    <value>Widthdraw money</value>
  </data>
  <data name="DecimalFormat" xml:space="preserve">
    <value>Amount must have a formal like (0.00 or 0.0 or 0)</value>
  </data>
  <data name="AddBankProduct" xml:space="preserve">
    <value>Add bank product</value>
  </data>
  <data name="AskToAddMoney" xml:space="preserve">
    <value>Are you sure that you want to add money?</value>
  </data>
  <data name="BankProducts" xml:space="preserve">
    <value>Bank products</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="Clients" xml:space="preserve">
    <value>Clients</value>
  </data>
  <data name="ClientsPassport" xml:space="preserve">
    <value>Clients passport</value>
  </data>
  <data name="ClientsProfile" xml:space="preserve">
    <value>Clients profile</value>
  </data>
  <data name="CreditName" xml:space="preserve">
    <value>Credit name</value>
  </data>
  <data name="Credits" xml:space="preserve">
    <value>Credits</value>
  </data>
  <data name="CurrencyDelete" xml:space="preserve">
    <value>Currency delete</value>
  </data>
  <data name="DepositName" xml:space="preserve">
    <value>Deposit name</value>
  </data>
  <data name="Deposits" xml:space="preserve">
    <value>Deposits</value>
  </data>
  <data name="DescribeTheProblem" xml:space="preserve">
    <value>Describe the problem</value>
  </data>
  <data name="Duration" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="EarlyTermination" xml:space="preserve">
    <value>Early termination</value>
  </data>
  <data name="EarlyTerminationCredit" xml:space="preserve">
    <value>Early termination</value>
  </data>
  <data name="Enter" xml:space="preserve">
    <value>Enter</value>
  </data>
  <data name="ErrorCode" xml:space="preserve">
    <value>Error code</value>
  </data>
  <data name="ErrorTakeMoneyFromCreditAcc" xml:space="preserve">
    <value>Error: Can't take money from credit account</value>
  </data>
  <data name="FinancialReports" xml:space="preserve">
    <value>Financial reports</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello</value>
  </data>
  <data name="InterestRate" xml:space="preserve">
    <value>Interest rate</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="LogInForClients" xml:space="preserve">
    <value>Log in for clients</value>
  </data>
  <data name="LoginHelpMessage" xml:space="preserve">
    <value>Use your credentials to enter the system.</value>
  </data>
  <data name="LogInTitle" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="LogOff" xml:space="preserve">
    <value>Log off</value>
  </data>
  <data name="OperationError" xml:space="preserve">
    <value>Operation error</value>
  </data>
  <data name="OperationErrorMessage" xml:space="preserve">
    <value>Please contact system administrator or operator</value>
  </data>
  <data name="Operators" xml:space="preserve">
    <value>Operators</value>
  </data>
  <data name="OperatorsList" xml:space="preserve">
    <value>Operators list</value>
  </data>
  <data name="PayIn" xml:space="preserve">
    <value>Pay in</value>
  </data>
  <data name="PayOut" xml:space="preserve">
    <value>Pay out</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="RegisterOperator" xml:space="preserve">
    <value>Register operator</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="SubmitEntry" xml:space="preserve">
    <value>Submit entry</value>
  </data>
  <data name="TakeAPicture" xml:space="preserve">
    <value>Take a picture</value>
  </data>
  <data name="TotalCreditAmount" xml:space="preserve">
    <value>Total credit amount</value>
  </data>
  <data name="TotalDepositedAmount" xml:space="preserve">
    <value>Total deposited amount</value>
  </data>
  <data name="TotalDepositInterests" xml:space="preserve">
    <value>Total deposits interests</value>
  </data>
  <data name="TransferErrorFromCreditAcc" xml:space="preserve">
    <value>Error: Can't transfer money from credit account</value>
  </data>
  <data name="TransferFunds" xml:space="preserve">
    <value>Transfer funds</value>
  </data>
  <data name="TypeTheSymbols" xml:space="preserve">
    <value>Type the symbols</value>
  </data>
  <data name="TypeTheText" xml:space="preserve">
    <value>Type the text</value>
  </data>
  <data name="WithdrawFunds" xml:space="preserve">
    <value>Withdraw funds</value>
  </data>
  <data name="WrongCapchaInput" xml:space="preserve">
    <value>Wrong capcha input</value>
  </data>
  <data name="YouAreLoggedInAs" xml:space="preserve">
    <value>You're logged in as</value>
  </data>
  <data name="Block" xml:space="preserve">
    <value>Block</value>
  </data>
  <data name="Freeze" xml:space="preserve">
    <value>Freeze</value>
  </data>
  <data name="SetToNormal" xml:space="preserve">
    <value>Set to normal</value>
  </data>
</root>