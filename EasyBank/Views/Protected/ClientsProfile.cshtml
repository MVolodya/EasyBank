@using System.Web.Razor.Parser.SyntaxTree
@model EasyBank.Models.Client

@{
    ViewBag.Title = @Resources.Resource.ClientsProfile;
}
<script>
    $(document).ready(function () {
        prevTriggeredTrId = "";
        debugger;
        $("#types").css("display", "none");
        $("#currencies").css("display", "none");
        $("#depositTypes").css("display", "none");
        $("#creditTypes").css("display", "none");
        $("#submitButton").css("display", "none");
        $("#amountDiv").css("display", "none");
        $("div #cancelButton").css("display", "none");

        $("#payInButton").css("display", "none");
        $("#payOutButton").css("display", "none");
        $("#transferButton").css("display", "none");
        $("#historyButton").css("display", "none");

        $(".selectableTr").click(function () {
            if (this.id != prevTriggeredTrId) {
                $(this).css("background-color", "white");
                $("#" + prevTriggeredTrId.toString()).css("background-color", "rgba(0,0,0,0)");
                prevTriggeredTrId = this.id;
                parms = this.id.split('-', 2);
                $("#payInButton").attr("href", "/Operation/AddMoney/" + parms[0]);
                $("#payOutButton").attr("href", "/Operation/WidthdrawMoney/" + parms[0]);
                $("#transferButton").attr("href", "/Operation/TransferMoney/" + parms[0]);
                $("#historyButton").attr("href", "/Protected/AccountHistory/" + parms[0]);
                if (parms[1] == "Credit") {
                    $("#payInButton").css("display", "inline-block");
                    $("#payOutButton").css("display", "none");
                    $("#transferButton").css("display", "none");
                }
                else if (parms[1] == "Deposit") {
                    $("#payInButton").css("display", "inline-block");
                    $("#payOutButton").css("display", "inline-block");
                    $("#transferButton").css("display", "none");
                }
                else if (parms[1] == "Normal") {
                    $("#payInButton").css("display", "inline-block");
                    $("#payOutButton").css("display", "inline-block");
                    $("#transferButton").css("display", "inline-block");
                }
                $("#historyButton").css("display", "inline-block");
            }
        });

        $("#showFirstBox").click(function () {
            $("#types").css("display", "inline-block");
            $("#showFirstBox").css("display", "none");
            $("div #cancelButton").css("display", "inline-block");
            $("#amountDiv #Amount").val(0);
        });
        $("#types").change(function () {
            $("#currencies").css("display", "inline-block");
        });
        $("#currencies").change(function () {
            if ($("#types select").val() == 2) {
                $("#depositTypes").css("display", "inline-block");
                $("#amountDiv").css("display", "inline-block");
            }
            else if ($("#types select").val() == 3) {
                $("#creditTypes").css("display", "inline-block");
                $("#amountDiv").css("display", "inline-block");
            }
            $("#submitButton").css("display", "inline-block");
        });
        $("div #cancelButton").click(function () {
            $("#types").css("display", "none");
            $("#currencies").css("display", "none");
            $("#depositTypes").css("display", "none");
            $("#creditTypes").css("display", "none");
            $("#submitButton").css("display", "none");
            $("#amountDiv").css("display", "none");
            $("div #cancelButton").css("display", "none");
            $("#showFirstBox").css("display", "inline-block");
        });
        $("select[id='AccountType'] option:lt(1)").attr("disabled", "disabled");
        $("select[id='CurrencyId'] option:lt(1)").attr("disabled", "disabled");
        $("select[id='DepositId'] option:lt(1)").attr("disabled", "disabled");
        $("select[id='CreditId'] option:lt(1)").attr("disabled", "disabled");
    });
</script>
<style>
    td {
        padding: 0.5em; /* Just to spread things out a bit */
    }

    #account tr:hover {
        cursor: pointer;
    }

    #back {
        font-size: larger;
        font-weight: bold;
        background-color: rgb(182, 179, 179);
        margin-top: 15px;
        padding: 5px;
        border-radius: 4px;
        text-decoration: none;
    }

    #back:hover {
        background-color: lightblue;
    }
</style>

<h2>@Html.Label(@Resources.Resource.ClientsProfileTitle)</h2>
<br />
&#9664 @Html.ActionLink(@Resources.Resource.BackToList, "ClientsList", "Protected", new { @id = "back" })
<br />
<br />
<div style="background-color: rgba(255,255,255, 0.5); float: left; padding-top: 14px; padding-left: 20px; padding-bottom: 30px; padding-right: 25px; border-radius: 10px;">
    <div style="float: left;">
        <table>
            <tr>
                <td>
                    @Html.DisplayNameFor(model => model.Name)
                </td>
                <td>
                    <div class="display-field">
                        @Html.DisplayFor(model => model.Name)
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    @Html.DisplayNameFor(model => model.Surname)
                </td>
                <td>
                    <div class="display-field">
                        @Html.DisplayFor(model => model.Surname)
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    @Html.DisplayNameFor(model => model.Email)
                </td>
                <td>
                    <div class="display-field">
                        @Html.DisplayFor(model => model.Email)
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    @Html.DisplayNameFor(model => model.BirthDate)
                </td>
                <td>
                    <div class="display-field">
                        @Html.DisplayFor(model => model.BirthDate)
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    @Html.DisplayNameFor(model => model.PIdNumber)
                </td>
                <td>
                    <div class="display-field">
                        @Html.DisplayFor(model => model.PIdNumber)
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    @Html.DisplayNameFor(model => model.RegistrationDate)
                </td>
                <td>
                    <div class="display-field">
                        @Html.DisplayFor(model => model.RegistrationDate)
                    </div>
                </td>
            </tr>

        </table>
    </div>


    <div style="float: left; padding-left: 80px; padding-top: 17px;">

        <div style="width: 180px; height: 135px; background-color: white">
            @Html.Action("ShowClientPhoto", new { id = Model.ClientId })
        </div>
    </div>

</div>

<br />
<div style="clear: both; background-color: rgba(255,255,255, 0.4); float: left; padding-top: 10px; padding-left: 20px; padding-bottom: 30px; border-radius: 10px; margin-top: 10px; min-width: 1000px;">
    <input type="button" id="showFirstBox" value="@Resources.Resource.AddAccount">
    <div id="accCreateDiv" style="clear: both">
        @Html.Action("AddAccountPartial")
    </div>

    <table id="account">
        @if (Model.Accounts.Count() != 0)
        {
            <tr>
                <th>@Html.ActionLink(@Resources.Resource.AccNumb, "ClientsProfile", new { clientId = Model.ClientId, sort = ViewBag.AccountNumberSort })</th>
                <th>@Html.ActionLink(@Resources.Resource.ExpDate, "ClientsProfile", new { clientId = Model.ClientId, sort = ViewBag.ExpirationDateSort })</th>
                <th>@Html.ActionLink(@Resources.Resource.Amount, "ClientsProfile", new { clientId = Model.ClientId, sort = ViewBag.AmountSort })</th>
                <th>@Html.ActionLink(@Resources.Resource.Currency, "ClientsProfile", new { clientId = Model.ClientId, sort = ViewBag.CurrencySort })</th>
                <th>@Html.ActionLink(@Resources.Resource.Type, "ClientsProfile", new { clientId = Model.ClientId, sort = ViewBag.TypeSort })</th>
                <th>@Html.ActionLink(@Resources.Resource.Status, "ClientsProfile", new { clientId = Model.ClientId, sort = ViewBag.StatusSort })</th>
            </tr>
        }
        else
        {
            @Resources.Resource.AccountsAreAbsent
        }

        @foreach (var item in Model.Accounts)
        {
            <tr id="@item.AccountId-@item.AccountType.TypeName" class="selectableTr">
                <td>
                    <div class="display-field">
                        @Html.DisplayFor(modelItem => item.AccountNumber)
                    </div>
                </td>
                <td>
                    <div class="display-field">
                        @Html.DisplayFor(modelItem => item.ExpirationDate)
                    </div>
                </td>
                <td>
                    <div class="display-field">
                        @if (item.TypeId != 1)
                        {
                            @Html.DisplayFor(modelItem => item.AvailableAmount)
                        }
                        else
                        { 
                            @Html.DisplayFor(modelItem => item.Amount)
                        }
                    </div>
                </td>
                <td>
                    <div class="display-field">
                        @Html.DisplayFor(modelItem => item.Currency.CurrencyName)
                    </div>
                </td>
                <td>
                    <div class="display-field">
                        @Html.DisplayFor(modelItem => item.AccountType.TypeName)
                    </div>
                </td>
                <td>
                    <div class="display-field">
                        @Html.DisplayFor(modelItem => item.AccountStatus.StatusName)
                    </div>
                </td>
                <td>
                    @if (User.IsInRole("Client"))
                    {
                        @Html.ActionLink(@Resources.Resource.Freeze, "Freeze", new { id = item.AccountId, clientId = Model.ClientId }); <span>|</span>
                    }
                    else
                    {
                        @Html.ActionLink(@Resources.Resource.Block, "Block", new { id = item.AccountId, clientId = Model.ClientId }); <span>|</span>
                        @Html.ActionLink(@Resources.Resource.SetToNormal, "SetToNormal", new { id = item.AccountId, clientId = Model.ClientId });
                    }
                </td>
            </tr>
        
        }
    </table>
    <style>
        .ButtonLink {
            font-size: larger;
            font-weight: bold;
            background-color: rgb(182, 179, 179);
            margin-top: 15px;
            padding: 5px;
            border-radius: 4px;
            text-decoration: none;
        }

            .ButtonLink:hover {
                background-color: lightblue;
            }
    </style>
    <a href="#" id="payInButton" class="ButtonLink">@Resources.Resource.PayIn</a>
    <a href="#" id="payOutButton" class="ButtonLink">@Resources.Resource.PayOut</a>
    <a href="#" id="transferButton" class="ButtonLink">@Resources.Resource.TransMoney</a>
    <a href="#" id="historyButton" class="ButtonLink">@Resources.Resource.History</a>
</div>
