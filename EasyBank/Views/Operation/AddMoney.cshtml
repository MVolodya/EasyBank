@model EasyBank.Models.Account

<script src="~/Scripts/jquery-1.8.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script type="text/javascript">
    $.validator.methods.number = function(value, element) {
        return !isNaN(parseFloat(value));
    };
    $.validator.methods.range = function(value, element, param) {
        var globalizedValue = value.replace(",", ".");
        return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
    };
    $(document).ready(function () {
        $(document).on('submit','#submitForm',function() {
            $("#Amount").val( $("#Amount").val().replace(',','.') );
            alert();
        });
    });
</script>


<fieldset>
    <legend>Account</legend>
    <table>
        <tr>
            <td>
                <div class="display-label">
                    <b>@Html.DisplayNameFor(model => model.AccountNumber)</b>
                </div>
            </td>
            <td>
                <div class="display-field">
                    @Html.DisplayFor(model => model.AccountNumber)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="display-label">
                    <b>@Html.DisplayNameFor(model => model.ExpirationDate)</b>
                </div>
            </td>
            <td>
                <div class="display-field">
                    @Html.DisplayFor(model => model.ExpirationDate)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="display-label">
                    <b>@Html.DisplayNameFor(model => model.Amount)</b>
                </div>
            </td>
            <td>
                <div class="display-field">
                    @Html.DisplayFor(model => model.Amount)
                </div>
            </td>
            <tr>
            </tr>
            <td>
                <div class="display-label">
                    <b>@Html.DisplayNameFor(model => model.AvailableAmount)</b>
                </div>
            </td>
            <td>
                <div class="display-field">
                    @Html.DisplayFor(model => model.AvailableAmount)
                </div>
            </td>
            <tr>
            </tr>
            <td>
                <div class="display-label">
                    <b>@Html.DisplayNameFor(model => model.ClientId)</b>
                </div>
            </td>
            <td>
                <div class="display-field">
                    @Html.DisplayFor(model => model.Client.Name)
                </div>
            </td>
            <tr>
            </tr>
            <td>
                <div class="display-label">
                    <b>@Html.DisplayNameFor(model => model.TypeId)</b>
                </div>
            </td>
            <td>
                <div class="display-field">
                    @Html.DisplayFor(model => model.AccountType.TypeName)
                </div>
            </td>
            <tr>
            </tr>
            <td>
                <div class="display-label">
                    <b>@Html.DisplayNameFor(model => model.CurrencyId)</b>
                </div>
            </td>
            <td>
                <div class="display-field">
                    @Html.DisplayFor(model => model.Currency.CurrencyName)
                </div>
            </td>
        </tr>
        <tr>

            <td>
                <div class="display-label">
                    <b>@Html.DisplayNameFor(model => model.StatusId)</b>
                </div>
            </td>
            <td>
                <div class="display-field">
                    @Html.DisplayFor(model => model.AccountStatus.StatusName)
                </div>
            </td>
        </tr>
    </table>
</fieldset>

<p><b>Add Funds</b></p>
@using (Html.BeginForm("AddMoney", "Operation", FormMethod.Post, new { @Id = "submitForm" }))
{
    @Html.ValidationSummary(true)
    Model.Amount = 0;
    @Html.HiddenFor(model => model.AccountId)
    @Html.HiddenFor(model => model.ClientId)
    <div class="editor-field">
        @Html.EditorFor(model => model.Amount)
        @Html.ValidationMessageFor(model => model.Amount)

        @{
    List<SelectListItem> itemList = ViewBag.itemList;
        }
        @Html.DropDownList("CurrencyName", itemList)

    </div>

    <input type="submit" value=@Resources.Resource.Submit  onclick="return confirm('@Resources.Resource.AskToAddMoney    ') ? true : false;" />
}

<p>
    @Html.ActionLink(@Resources.Resource.BackToList, "ClientsProfile", "Protected", new { clientId = Model.ClientId }, null)
</p>
